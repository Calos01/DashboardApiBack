// <auto-generated />
using System;
using DashboardApiBack.BDContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DashboardApiBack.Migrations
{
    [DbContext(typeof(DbContextDashboard))]
    [Migration("20230712011100_CreatingDb")]
    partial class CreatingDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DashboardApiBack.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Junior@HOTMAIL.COM",
                            Name = "Chacalon"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Scalante@HOTMAIL.COM",
                            Name = "Chapita"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Bush@HOTMAIL.COM",
                            Name = "Jorsh"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Lissent@HOTMAIL.COM",
                            Name = "Chicarita"
                        });
                });

            modelBuilder.Entity("DashboardApiBack.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PedCompletado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PedRealizado")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("DashboardApiBack.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Servers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "La Laland",
                            Online = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "Moonlight",
                            Online = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "Barry",
                            Online = false
                        });
                });

            modelBuilder.Entity("DashboardApiBack.Models.Pedido", b =>
                {
                    b.HasOne("DashboardApiBack.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
